<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- uses Junit 5 for tests -->
    <!-- seems to have integration tests inside of the module -->
    <parent>
        <groupId>us.heptet.magewars</groupId>
        <artifactId>pom</artifactId>
        <version>0.20-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>magewars-domain-persistence</artifactId>
    <packaging>jar</packaging>
    <name>domain-persistence</name>
    <description>Persistence layer for magewars.</description>
    <dependencies>
        <!-- Inter-module dependencies -->
        <dependency>
            <groupId>us.heptet.magewars</groupId>
            <artifactId>magewars-domain</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- Logging API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Spring dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>

        <!-- Logging dependency for spring -->

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Our logging implementation and its dependency -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logbackVersion}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>2.6.1</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4jVersion}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring test dependency -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Test framework dependencies -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.vintage.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- JDBC dependencies -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.1-901-1.jdbc4</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>

        <!-- Jackson Annotation Processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jacksonVersion}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jacksonVersion}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jacksonVersion}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Hibernate dependency for JPA -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <version>1.0.0.Final</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
        </dependency>

        <!-- JDBC connection pooling -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>2.1.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- More JDBC dependencies for embedded databases. -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.3.4</version>
        </dependency>
<!--
        <dependency>
            <groupId>hsqldbmin</groupId>
            <artifactId>hsqldbmin</artifactId>
            <version>trunk</version>
            <scope>system</scope>
            <systemPath>d:/jade/temp/hsqldb-svn-base-trunk/lib/hsqldbmin.jar</systemPath>
        </dependency>
-->

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.192</version>
        </dependency>
        <dependency>
            <groupId>org.apache.derby</groupId>
            <artifactId>derby</artifactId>
            <version>10.12.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Dunno what this is but we need it-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- JMock for test purposes -->
        <dependency>
            <groupId>org.jmock</groupId>
            <artifactId>jmock</artifactId>
            <version>${jmockVersion}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-library</artifactId>
                </exclusion>

            </exclusions>
        </dependency>

        <!-- This was an experiment and I don't know if it works -->
        <dependency>
            <groupId>uk.org.lidalia</groupId>
            <artifactId>sysout-over-slf4j</artifactId>
            <version>1.0.2</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- experiment - dunno if it works -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>us.heptet.magewars.domain.persistence.InitDb</mainClass>
                    <systemProperties>
                        <spring.profiles.active>${magewars.spring.profiles.active}</spring.profiles.active>
                        <derby.system.home>${magewars.derby.system.home}</derby.system.home>
                    </systemProperties>
                </configuration>
            </plugin>
            <!-- another experiment -->
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.5.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- yay testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                    <properties>
                        <property>
                            <name>listener</name>1
                            <value><!--us.heptet.magewars.test.MageWarsListener--></value>
                        </property>
                    </properties>
                    <skipTests>${magewars.domain.skipTests}</skipTests>
                    <excludedGroups>us.heptet.magewars.testgroup.Broken,us.heptet.magewars.testgroup.Unimplemented</excludedGroups>
                    <systemPropertyVariables>
                        <override.baselogdir>${override.baselogdir}</override.baselogdir>
                        <spring.profiles.active>${magewars.spring.profiles.active}</spring.profiles.active>

                        <!-- IDEA seems to pick up the maven test xml based on this configuration, which defeats the purpose of what I was trying to accmplish -->
                        <!--    <logback.configurationFile>logback-maven-test.xml</logback.configurationFile> -->
                        <!--
                                                <logback.statusListenerClass></logback.statusListenerClass>
                        -->
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*IntegrationTest.java</include>
                    </includes>
                    <systemPropertyVariables>
                        <override.baselogdir>${override.baselogdir}</override.baselogdir>
                        <spring.profiles.active>${magewars.spring.profiles.active}</spring.profiles.active>
                    </systemPropertyVariables>
                    <excludedGroups>us.heptet.magewars.testgroup.Broken,us.heptet.magewars.testgroup.Unimplemented</excludedGroups>
                    <skipTests>${magewars.domain.skipTests}</skipTests>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>


        </plugins>
    </build>
    <profiles>
        <profile>
            <id>hibernate-jpa</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
            </dependencies>

        </profile>
        <profile>
            <id>domain-logback-debug</id>
            <activation>
                <property>
                    <name>domainLogbackDebug</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.19.1</version>
                        <configuration>
                            <systemPropertyVariables>
                                <logback.statusListenerClass>ch.qos.logback.core.status.OnConsoleStatusListener
                                </logback.statusListenerClass>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!--
        <profile>
            <id>glassfish-persistence</id>
            <activation>

            </activation>
            <dependencies>
                <dependency>
                    <groupId>glassfish-persistence</groupId>
                    <artifactId>toplink-essentials</artifactId>
                    <version>1_ur1-b14</version>
                    <scope>system</scope>
                    <systemPath>d:/current/glassfish-jpa/glassfish-persistence/toplink-essentials.jar</systemPath>
                </dependency>
                <dependency>
                    <groupId>javax.persistence</groupId>
                    <artifactId>persistence-api</artifactId>
                    <version>1.0-rev-1</version>
                </dependency>
            </dependencies>
        </profile>
        -->

    </profiles>
</project>
